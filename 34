class Solution {
public:
    int binary_search(const std::vector<int>& nums, const int& target){
        int left = 0;
        int right = nums.size() - 1;
        while(left < right){
            int mid = left + (right - left) / 2;
            if(nums[mid] <= target) left = mid  + 1;
            else right = mid;
        }    
        return left;
    }
    vector<int> searchRange(vector<int>& nums, int target) {
        if(nums.size() == 0) return {-1,-1};
        int begin = binary_search(nums,target - 1);
        if(begin < 0 || begin >= nums.size() || nums[begin]!=target) return {-1,-1};
        int end = binary_search(nums, target);
        if (nums[end] != target) --end;
        return {begin, end};
    }
};
