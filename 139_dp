class Solution {
public:
    bool wordBreak(string s, vector<string>& wordDict) {
        int n = s.size();
        std::vector<bool> dp(n + 1, false);
        dp[0] = true;
        std::unordered_set<std::string> dic(wordDict.begin(), wordDict.end());
        for(int i = 1; i <= n; ++i){
            for(int j = i; j >= 1; --j){
                std::string str = s.substr(j - 1, i - j + 1);
                if(dic.find(str) != dic.end() && dp[j - 1]){
                    dp[i] = true;
                    break;
                }
            }
        }
        return dp.back();
    }
};
