class Solution {
public:
    int div(const std::vector<int>& v, const int& lim){
        int res = 0;
        int sum = 0;
        for(const int& d: v){
            sum += d;
            if(sum >= lim){
                ++res;
                sum = 0;
            }
        }
        return res;
    }
    int maximizeSweetness(vector<int>& sweetness, int K) {
        int right = 0;
        int left = INT_MAX;
        for(const int& d: sweetness){
            right += d;
            left = std::min(left, d);
        }
        while(left < right){
            if(left + 1 == right){
                if(div(sweetness,right) >= K + 1) return right;
                return left;
            }
            int mid = left + (right - left) / 2;
            if(div(sweetness,mid) >= K + 1) left = mid;
            else right = mid;
        }
        return left;
    }
};
