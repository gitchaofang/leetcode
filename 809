class Solution {
public:
    int count(const std::string& s, char c, int i){
        int n = s.size();
        int start = i;
        while(i < n && s[i] == c) ++i;
        return i;
    }
    int expressiveWords(string S, vector<string>& words) {
        if(words.empty()) return 0;
        std::vector<std::pair<int,int>> prot;
        for(int i=0; i<S.size(); ++i){
            int end = count(S,S[i],i);
            prot.push_back({S[i],end - i});
            i = end - 1;
        }
        int res = 0;
        for(const std::string& s: words){
            int n = s.size();
            int pos = 0;
            bool sig = true;
            for(int i=0; i<n; ++i){
                if(pos == prot.size() || s[i] != prot[pos].first){ 
                    sig = false;
                    break;
                }
                int end = count(s,s[i],i);
                if ((end - i != prot[pos].second) && (end - i > prot[pos].second || prot[pos].second < 3)){
                    sig = false;
                    break;
                }
                i = end - 1;
                ++pos;
                   
            }
            if(sig == true && pos == prot.size()){ 
                ++res;
            }
        }
        return res;
    }
};
