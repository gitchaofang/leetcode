class Solution {
public:
    int numSubseq(vector<int>& nums, int target) {
        int n = nums.size();
        if(n == 0) return 0;
        std::sort(nums.begin(),nums.end());
        std::vector<int> pl(n);
        pl[0] = 1;
        int mod = pow(10,9) + 7;
        for(int i = 1; i < n; ++i) pl[i] = (2 * pl[i - 1]) % mod;
        int left = 0;
        int right = nums.size() - 1;
        int res = 0;
        while(left <= right){
            if(nums[left] + nums[right] <= target){ 
                res = (res + pl[right - left]) % mod;
                ++left;
            }
            else --right;
        }
        return res;
    }
};
