class Solution {
public:
    int dc(const std::vector<int>& v,int left, int right, int& res){
        if(left == right) return v[left];
        int mid = left;
        for(int i=left; i<=right; ++i){
            if(v[i] > v[mid]) mid = i;
        }

        if(left < mid && mid < right){
            int lv = dc(v,left,mid-1,res);
            int rv = dc(v,mid+1,right,res);
            res += v[mid] * (lv + rv);
            return v[mid];
        }
        if(left < mid){
            int lv = dc(v,left,mid-1, res);
            res += v[mid]*lv;
            return v[mid];
        }
        int rv = dc(v,mid+1, right,res);
        res += v[mid]*rv;
        return v[mid];
        
    }
    int mctFromLeafValues(vector<int>& arr) {
        int res = 0;
        dc(arr,0,arr.size()-1,res);
        return res;
    }
};
