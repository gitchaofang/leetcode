class Solution {
public:
    int dfs(TreeNode* root, int& res){
        if(!root) return 0;
        int left = dfs(root -> left,res);
        int right = dfs(root -> right,res);
        int d = 1;
        int l = 1;
        if(root -> left && root -> left ->val == root -> val){ 
            d += left;
            l += left;
        }
        if(root -> right && root -> right -> val == root -> val){ 
            d += right;
            l = std::max(l,right + 1);
        }
        res = std::max(res,d);        
        
        return l;
        
    }
    int longestUnivaluePath(TreeNode* root) {
        if(!root) return 0;
        int res = 0;
        dfs(root,res);
        return res - 1;
    }
};
