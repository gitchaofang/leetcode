class Solution {
public:
    int maxSideLength(vector<vector<int>>& mat, int threshold) {
        int row = mat.size();
        int col = mat[0].size();
        int len = std::min(row,col);
        std::vector<std::vector<std::vector<int>>>dp(row,std::vector<std::vector<int>>(col,std::vector<int>(len+1,0)));
        int res = 0;
        for(int i=0; i<row; ++i){
            for(int j=0; j<col; ++j){
                int sum = mat[i][j];
                dp[i][j][1] = sum;
                if(dp[i][j][1] <= threshold) res = std::max(res,1);
                for(int l=2; l<= std::min(i,j)+1; ++l){
                    sum += (mat[i-l+1][j] + mat[i][j-l+1]);
                    dp[i][j][l] = sum + dp[i-1][j-1][l-1];
                    if(dp[i][j][l] <= threshold) res = std::max(res,l);
                    else break;
                }
            }
        }
        return res;
    }
};
