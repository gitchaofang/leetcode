class Solution {
public:
    int findBestValue(vector<int>& arr, int target) {
        int left = 0;
        int right = 0;
        int sum = 0;
        for(const int&d: arr){ 
            sum += d; 
            right = std::max(right,d);
        }
        
        int res = right;
        while(left <= right){
            int mid = left + (right - left) / 2;
            int sm = 0;
            int i = 0;
            for(const int& d: arr) sm += std::min(mid, d);
            if(std::abs(sum - target) > std::abs(sm - target)){ 
                res = mid;
                sum = sm;
            }
            else if(std::abs(sum - target) == std::abs(sm - target)) res = std::min(mid,res);
            if(sm < target) left = mid + 1;
            else right = mid - 1;
        }
        return res;
    }
};
