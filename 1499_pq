struct cmp{
    bool operator()(const std::pair<int,int>& p1, const std::pair<int,int>& p2){
        return p1.first < p2.first;
    }  
};
class Solution {
public:
    int findMaxValueOfEquation(vector<vector<int>>& points, int k) {
        std::priority_queue<std::pair<int,int>, std::vector<std::pair<int,int>>, cmp> pq;   
        int res = INT_MIN;
        for(int i= 0; i< points.size(); ++i){
            while(!pq.empty() && points[i][0] - pq.top().second > k) pq.pop();
            if(!pq.empty())res = std::max(res, points[i][1] + points[i][0] + pq.top().first);
            pq.push({points[i][1] - points[i][0], points[i][0]});
            
        }
        return res;
    }
};
