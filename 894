class Solution {
public:
    vector<TreeNode*> allPossibleFBT(int N) {
        std::vector<std::vector<TreeNode*>> tree({{new TreeNode(0)}});
        for(int i = 2; i <= N; ++i){
            std::vector<TreeNode*> v;
            for(int j = 1; j < i - 1; ++j){
                for(TreeNode* leftnode: tree[j - 1]){
                    for(TreeNode* rightnode: tree[i - 2 - j]){
                        TreeNode* root = new TreeNode(0);
                        root -> left = leftnode;
                        root -> right = rightnode;
                        v.push_back(root);
                    }
                }
            }
            tree.push_back(v);
        }
        return tree.back();
    }
};
