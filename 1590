class Solution {
public:
    int minSubarray(vector<int>& nums, int p) {
        int n = nums.size();
        int rem = 0;
        std::unordered_map<int,int>m;
        for(int i = 0; i < n; ++i) rem = (rem + nums[i]) % p;
        if(rem == 0) return 0;
        int rem_t = 0;
        int res = n;
        for(int i = 0; i < n; ++i){
            rem_t = (rem_t + nums[i]) % p;
            if(rem_t == rem) res = std::min(res, i + 1);
            if(m.find((rem_t + p - rem) % p) != m.end()){
                res = std::min(res, i - m[(rem_t + p - rem) % p]);
            }
            m[rem_t] = i;
        }
        return res == n ? -1 : res;
        
    }
};
