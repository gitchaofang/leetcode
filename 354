class Solution {
public:
    bool connect(const std::vector<int>& v1, const std::vector<int>& v2){
        if(v1[0] < v2[0] && v1[1] < v2[1]) return true;
        return false;
    }
    int maxEnvelopes(vector<vector<int>>& envelopes) {
        int len = envelopes.size();
        if(len == 0) return 0;
        std::sort(envelopes.begin(),envelopes.end());
        std::vector<int> dp(len,1);
        int res = 1;
        for(int i = 1; i < len; ++i){
            for(int j = 0; j < i; ++j){
                if(connect(envelopes[j],envelopes[i]) == true){
                    dp[i] = std::max(dp[i],dp[j] + 1);
                }
                res = std::max(res, dp[i]);
            }
        }
        return res;
    }
};
