class MyCalendar {
public:
    MyCalendar() {
        
    }
    
    bool book(int start, int end) {
        if(m.empty()){
            m[start] = end;
            return true;
        }    
        auto it = m.lower_bound(start); 
        if(it != m.end() && it -> first < end) return false;
        if(it == m.begin()){
            m[start] = end;
            return true;
        }
        it = std::prev(it);
        if(it -> second <= start){
            m[start] = end;
            return true;
        }
        return false;
    }
private:
    std::map<int,int> m;
};
