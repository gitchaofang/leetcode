class Solution {
public:
    vector<string> reorderLogFiles(vector<string>& logs) {
        int n = logs.size();
        int pos = n - 1;
        for(int i = n - 1; i >= 0; --i){
            std::string str = logs[i];
            int j = str.find(' ');
            if(str[j + 1] <= '9' && str[j + 1] >= '0') std::swap(logs[i],logs[pos--]); 
        }    
        if(pos == -1) return logs;
        auto cmp = [](const std::string& str1,const std::string& str2){
            int pos = str1.find(' ');
            std::string head1 = str1.substr(0,pos);
            std::string body1 = str1.substr(pos + 1);
            pos = str2.find(' ');
            std::string head2 = str2.substr(0,pos);
            std::string body2 = str2.substr(pos + 1);
            if(body1 == body2) return head1 < head2;
            return body1 < body2;
        };
        std::sort(logs.begin(),logs.begin() + pos + 1,cmp);
        return logs;
    }
};
