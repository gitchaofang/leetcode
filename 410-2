class Solution {
public:
    int splitArray(vector<int>& nums, int m) {
        int len = nums.size();
        std::vector<std::vector<int64_t>> dp(len, std::vector<int64_t>(m + 1,INT_MAX));
        for(int i = 0; i < len; ++i) dp[i][0] = 0;
        for(int i = 0; i < len; ++i){
            int64_t sum = 0;
            for(int j = i; j >= 0; --j){
                sum += nums[j];
                if(j == 0) dp[i][1] = sum;
                for(int k = 1; k < std::min(m,j+1); ++k){
                    dp[i][k+1]  = std::min(dp[i][k+1], std::max(sum,dp[j - 1][k])); 
                }
            }
        }
        return dp[len - 1][m];
    }
};
