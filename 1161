class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        if(!root) return 0;
        std::map<int,int>m;
        int lev = 0;
        std::queue<TreeNode*> q({root});
        while(!q.empty()){
            ++lev;
            int sum = 0;
            for(int i = q.size(); i > 0; --i){
                TreeNode* node = q.front();
                q.pop();
                sum += node -> val;
                if(node -> left) q.push(node -> left);
                if(node -> right) q.push(node -> right);
            }
            if(m.find(sum) == m.end()) m[sum] = lev;
        }
        return m.rbegin() -> second;
    }
};
