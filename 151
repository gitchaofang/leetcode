class Solution {
public:
    string reverseWords(string s) {
        if(s == "") return "";
        while(s != "" && s.front() == ' ') s.erase(s.begin());
        if(s == "") return "";
        while(s != "" && s.back() == ' ') s.pop_back();
        if(s == "") return "";
        for(int i = 0; i < s.size() / 2; ++i) std::swap(s[i],s[s.size() - 1 -i]);
        std::cout << s;
        s.push_back(' ');
        for(int i = 0; i < s.size(); ++i){
            int pos = s.find(' ', i);
            for(int j = i; j <= (pos + i - 1) / 2; ++j) std::swap(s[j], s[pos-1-j+i]);
            int j = pos + 1;
            while(j < s.size() && s[j] == ' ') ++j;
            s.erase(pos + 1, j - pos - 1);
            i = pos;
        }
        s.pop_back();
        return s;
    }
};
