class Solution {
public:
    int maximizeSweetness(vector<int>& sweetness, int K) {
        int len = sweetness.size();
        std::vector<std::vector<int>>dp(len,std::vector<int>(K+1,0));
        dp[0][0] = sweetness[0];
        for(int i=1; i<len; ++i) dp[i][0] += dp[i-1][0] + sweetness[i]; 
        for(int k=1; k<= K; ++k){
            for(int i=0; i<len; ++i){
                int sum = 0;
                for(int j = i+1; j < len; ++j){
                    sum += sweetness[j];
                    dp[j][k] = std::max(dp[j][k],std::min(dp[i][k-1],sum));
                }
            }
        }
        return dp[len - 1][K];
    }
};
