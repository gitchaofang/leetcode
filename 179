class cmp{
    public:
        bool operator()(const std::string& str1, const std::string& str2){
            std::string s1 = str1 + str2;
            std::string s2 = str2 + str1;
            for(int i = 0; i < s1.size(); ++i){
                if(s1[i] != s2[i]) return s1[i] < s2[i];
            }
            return true;
        }
};
class Solution {
public:
    string largestNumber(vector<int>& nums) {
        std::priority_queue<std::string,std::vector<std::string>,cmp> pq;
        for(const int& d: nums) pq.push(std::to_string(d));
        std::string res("");
        while(!pq.empty()){
            res += pq.top();
            pq.pop();
        }
        while(res.size() > 1 && res[0] == '0') res.erase(res.begin());
        return res;
    }
};
