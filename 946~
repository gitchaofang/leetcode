class Solution {
public:
    bool validateStackSequences(vector<int>& pushed, vector<int>& popped) {
        std::unordered_set<int> cache;
        std::stack<int> st;
        int pos = 0;
        for(const int& d: pushed){
            if(popped[pos] != d){
                if(cache.find(d) != cache.end()) return false;
                st.push(d);
                cache.insert(d);  
            }
            else ++pos;
            while(pos < popped.size() && !st.empty() &&st.top() == popped[pos]){
                st.pop();
                cache.erase(popped[pos++]);
            }
        }
  
        for(;pos < popped.size(); ++pos){
            if(st.empty() || popped[pos] != st.top()) return false;
            st.pop();
        }
        return true;
    }
};
