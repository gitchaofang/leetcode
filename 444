class Solution {
public:
    bool sequenceReconstruction(vector<int>& org, vector<vector<int>>& seqs) {\
        if(org.empty()) return false;
        int len = org.size();
        std::unordered_map<int,int> m;
        std::vector<int> check(len+1,0);                                                 
        int cnt = len - 1;
        for(int i=0; i<len; ++i) m[org[i]] = i;
        bool exist = false;
        for(const std::vector<int>& v: seqs){
            for(int i=0; i<v.size(); ++i){
                exist = true;
                if(v[i] <= 0 || v[i] > len) return false;
                if(i == 0) continue;
                if(m[v[i - 1]] >= m[v[i]]) return false;
                if(check[v[i]] == 0 && m[v[i - 1]] + 1 == m[v[i]]){ 
                    --cnt;
                    check[v[i]] = 1;
                }
            }    
        }
        return (cnt == 0 && exist == true);                                                                    
    }
};
