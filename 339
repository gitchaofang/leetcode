class Solution {
public:
    int depthSum(vector<NestedInteger>& nestedList) {
        int res = 0;
        int dep = 0;
        std::queue<NestedInteger>q;
        for(const NestedInteger& ni: nestedList) q.push(ni);
        while(!q.empty()){
            ++dep;
            int n = q.size();
            for(int i=0; i<n; ++i){
                NestedInteger ni = q.front();
                q.pop();
                if(ni.isInteger()) res += (ni.getInteger())*dep;
                for(const NestedInteger& nni: ni.getList()) q.push(nni);
            }
        }
        return res;
    }
};
