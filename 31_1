class Solution {
public:
    void nextPermutation(vector<int>& nums) {
        int n = nums.size();
        int i = n - 1;
        while(i > 0 && nums[i] <= nums[i - 1]) --i;
        if(i == 0){
            std::sort(nums.begin(),nums.end());
            return;
        }
        std::multiset<int> st(nums.begin() + i,nums.end());
        auto it = st.lower_bound(nums[i - 1]);
        while(*it == nums[i - 1]) ++it;
        int d = *it;
        st.erase(it);
        st.insert(nums[i - 1]);
        nums[i - 1] = d;
        std::copy(st.begin(),st.end(),nums.begin() + i);
        return;
    }
};
