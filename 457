class Solution {
public:
    bool circularArrayLoop(vector<int>& nums) {
        int n = nums.size();
        std::unordered_set<int> visited;
        for(int i=0; i<n; ++i){
            if(visited.find(i) != visited.end()) continue;
            std::unordered_set<int> path;
            int cur = i;
            while(path.size() <= n){
                if(nums[cur]* nums[i] < 0) break;
                int next = (((cur + nums[cur]) % n) + n)%n;
                if(cur == next) break;
                if(path.find(next) != path.end()) return true;
                visited.insert(cur);
                path.insert(cur);
                cur = next;
            }
        }
        return false;
    }
};
