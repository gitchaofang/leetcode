class Solution {
public:
    int compareVersion(string version1, string version2) {
        version1 += '.';
        version2 += '.';
        int pos1 = 0;
        int pos2 = 0;
        while(pos1 < version1.size() && pos2 < version2.size()){
            std::string str1 = version1.substr(pos1, version1.find('.',pos1) - pos1);
            std::string str2 = version2.substr(pos2, version2.find('.', pos2) - pos2);
            if(std::stoi(str1) < std::stoi(str2)) return -1;
            else if(std::stoi(str1) > std::stoi(str2)) return 1;
            pos1 = version1.find('.',pos1) + 1;
            pos2 = version2.find('.',pos2) + 1;
        }
        while(pos1 != version1.size()){
            std::string str = version1.substr(pos1, version1.find('.',pos1) - pos1);               if(std::stoi(str) != 0) return 1;
            pos1 = version1.find('.',pos1) + 1;
            
        }
        while(pos2 != version2.size()){
            std::string str = version2.substr(pos2, version2.find('.', pos2) - pos2);
            if(std::stoi(str) != 0) return -1;
            pos2 = version2.find('.', pos2) + 1;
        }
        
        return 0;
    }
};
