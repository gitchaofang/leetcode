class Solution {
public:
    int minDominoRotations(vector<int>& A, vector<int>& B) {
        std::vector<int>top(6,0);
        std::vector<int>bot(6,0);
        std::vector<int>both(6,0);
        std::unordered_set<int> st;
        for(int i=0; i<A.size(); ++i){
            st.insert(A[i]-1);
            st.insert(B[i]-1);
            if(A[i] == B[i]) ++both[A[i]-1];
            else{
                ++top[A[i]-1];
                ++bot[B[i]-1];
            }
        }
        int res = INT_MAX;
        for(const int& d:st){
            if(top[d] + bot[d] + both[d] == A.size()) res = std::min(std::min(top[d],bot[d]),res);
        }
        return res == INT_MAX ? -1: res;
    }
};
