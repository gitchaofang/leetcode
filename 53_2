class Solution {
public:
    int dc(const std::vector<int>& nums, const int& left, const int& right){
        if(right == left) return nums[left];
        int mid = left + (right- left) / 2;
        int res = dc(nums, left, mid);
        res = std::max(res, dc(nums, mid + 1, right));
        int sm = 0;
        int tr = INT_MIN;
        for(int i = mid; i >= left; --i){
            sm += nums[i];
            tr = std::max(sm,tr);
        }
        sm = tr;
        for(int i = mid + 1; i <= right; ++i){
            sm += nums[i];
            tr = std::max(sm,tr);
        }
        return std::max(res,tr);
    }
    int maxSubArray(vector<int>& nums) {
        return dc(nums,0,nums.size() - 1);        
    }
};
