class Solution {
public:
    Node* copyRandomList(Node* head) {
        if(!head) return nullptr;
        if(m.find(head) != m.end()) return m[head];
        Node* node = new Node(head -> val);
        m[head] = node;
        node -> next = copyRandomList(head -> next);
        node -> random = copyRandomList(head -> random);
        return node;
        
    }
private:
    std::unordered_map<Node*, Node*>m;
};
