class Solution {
public:
    void rec(const std::string& formula,map<std::string,int>& m,const int& left, const int & right, const int& mul){
        for(int i = left; i <= right; ++i){
            if(formula[i] == '('){
                int ptr = i;
                int cnt = 1;
                while(cnt > 0){
                    ++ptr;
                    if(formula[ptr] == '(') ++cnt;
                    else if(formula[ptr] == ')') --cnt;
                }
                int r = ptr;
                int d = 0;
                if(ptr < right && formula[ptr + 1] >= '0' && formula[ptr + 1] <= '9'){
                    ++ptr;
                    while(ptr <= right && formula[ptr] >='0' && formula[ptr] <= '9'){
                        d = d * 10 + (formula[ptr++] - '0');
                    }
                }
                if(d == 0){ 
                    d = 1;
                    ++ptr;
                }
                rec(formula, m, i + 1, r - 1, d * mul);
                i = ptr - 1;
            } 
            else{
                std::string str("");
                str += formula[i++];
                while((i <= right && formula[i] >= 'a' && formula[i] <= 'z')) str += formula[i++];
                int d = 0;
                while(i <= right && formula[i] >= '0' && formula[i] <= '9') d = d * 10 + (formula[i++] - '0');
                if(d == 0) d = 1;
                m[str] += mul * d;
                --i;
            }
        }
        return;
    }
    string countOfAtoms(string formula) {
        map<std::string,int> m;  
        rec(formula, m, 0, formula.size() - 1, 1);
        std::string res("");
        for(auto it = m.begin(); it != m.end(); ++it){
            if(it -> second > 1) res += (it -> first + std::to_string(it -> second));
            else res += it -> first;
        }
        return res;
    }
};
