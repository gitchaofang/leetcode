class FindElements {
public:
    void reorder(TreeNode* root){
        if(root -> left){
            root -> left -> val = 2 * root -> val + 1;
            reorder(root -> left);
        }
        if(root -> right){
            root -> right -> val = 2 * root -> val + 2;
            reorder(root -> right);
        }
        return;
    }
    FindElements(TreeNode* root) {
        if(!root) head = root;
        root -> val = 0;
        reorder(root);
        head = root;
    }
    
    bool find(int target) {
        if(!head) return false;
        int d = target;
        std::stack<int> st;
        while(d > 0){
            st.push(d);
            d = (d-1)/2;
        }
        TreeNode* node = head;
        while(!st.empty()){
            int d = st.top();
            st.pop();
            if(node -> left && node -> left -> val == d) node = node -> left;
            else if(node -> right && node -> right -> val == d) node = node -> right;
            else return false;
        }
        return true;
    }
private:
    TreeNode* head;
};
