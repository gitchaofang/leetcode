class Solution {
public:
    int maxVacationDays(vector<vector<int>>& flights, vector<vector<int>>& days) {
        int k = days[0].size();
        int city_num = days.size();
        std::vector<std::vector<int>>dp(city_num,std::vector<int>(k + 1,0));
        std::vector<int> cur(city_num,0);
        cur[0] = 1;
        for(int w = 1; w <= k; ++w){
            for(int i = 0; i < city_num; ++i){
                if(cur[i] == 0)continue;
                cur[i] = 1;
                dp[i][w] = std::max(dp[i][w], dp[i][w - 1] + days[i][w - 1]);
                for(int j = 0; j < city_num; ++j){
                    if(flights[i][j] == 0) continue;
                    if(cur[j] == 0) cur[j] = -1;
                    dp[j][w] = std::max(dp[j][w], dp[i][w - 1] + days[j][w - 1]);
                }
            }
        }
        int res = 0;
        for(int i = 0; i < city_num; ++i) res = std::max(dp[i][k],res);
        
        return res;
        
    }
};
