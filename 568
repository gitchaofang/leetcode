class Solution {
public:
    int maxVacationDays(vector<vector<int>>& flights, vector<vector<int>>& days) {
        int city_num = flights.size();
        int weeks = days[0].size();
        std::vector<int> dp(city_num,0);
        std::vector<int> cur(city_num,0);
        cur[0] = 1;
        std::vector<int> tv;
        for(int w = 0; w < weeks; ++w){
            tv = dp;
            for(int i = 0; i < city_num; ++i){
                if(cur[i] == 0) continue;
                tv[i] = std::max(tv[i],dp[i] + days[i][w]); 
                for(int j = 0; j < city_num; ++j){
                    if(flights[i][j] == 0) continue;
                    cur[j] = 1;
                    tv[j] = std::max(tv[j],dp[i] + days[j][w]);
                }
            }
            dp = tv;
        }
        int res = 0;
        for(const int& d: dp) res = std::max(res,d);
        return res;
    }
};
