class Solution {
public:
    int longestStrChain(vector<string>& words) {
        auto cmp = [](const std::string& str1, const std::string& str2){
            return str1.size() < str2.size();  
        };
        std::sort(words.begin(),words.end(),cmp);
        std::unordered_map<std::string,int> m;
        int res = 0;
        for(const std::string& str: words){
            int cnt = 1;
            for(int i=0; i<str.size(); ++i){
                std::string ss = str.substr(0,i) + str.substr(i+1);
                if(m.find(ss) == m.end()) continue;
                cnt = std::max(cnt,1+m[ss]);
            }
            m[str] = cnt;
            res = std::max(cnt,res);
        }
        return res;
    }
};
