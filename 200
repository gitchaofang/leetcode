class Solution {
public:
    int numIslands(vector<vector<char>>& grid) {
        int row = grid.size();
        if(row == 0) return 0;
        int col = grid[0].size();
        int res = 0;
        std::vector<std::pair<int,int>> dire({{-1,0},{0,1},{1,0},{0,-1}});
        for(int i=0; i<row; ++i){
            for(int j=0; j<col; ++j){
                if(grid[i][j] == '0') continue;
                ++res;
                std::queue<std::pair<int,int>>q({{i,j}});
                while(!q.empty()){
                    std::pair<int,int>p = q.front();
                     q.pop();
                    for(const std::pair<int,int>&dir: dire){
                        int x = p.first + dir.first;
                        int y = p.second + dir.second;
                        if(x<0 || x>=row || y<0 || y>=col || grid[x][y] == '0') continue;
                        q.push({x,y});
                        grid[x][y] = '0';
                    }
                }
            }
        }
        return res;
    }
};
