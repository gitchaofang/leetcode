class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int n = nums.size();
        if(n < 3) return {};
        std::sort(nums.begin(),nums.end());
        if(nums.front() > 0 || nums.back() < 0) return {};
        std::vector<std::vector<int>> res;
        for(int i=0; i<n; ++i){
            if(nums[i] > 0) break;
            if(i > 0 && nums[i] == nums[i-1]) continue;
            int target = -nums[i];
            int left = i + 1;
            int right = n - 1;
            while(left < right){
                if (nums[left] + nums[right] == target){
                    res.push_back({nums[i],nums[left],nums[right]});
                    while(left < right && nums[left] == nums[left + 1]) ++left;
                    ++left;
                    while(left < right && nums[right] == nums[right - 1]) --right;
                    --right;
                }
                else if(nums[left] + nums[right] < target) ++left;
                else --right;
            }
        }
        return res;
    }
};
