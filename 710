class Solution {
public:
    Solution(int N, vector<int>& blacklist):len(N-blacklist.size()) {
        int i = len;
        std::unordered_set<int> st(blacklist.begin(),blacklist.end());
        for(const int& d: blacklist){
            if(d >= len) continue;
            while(st.find(i)!=st.end()) ++i;
            m[d] = i;
            ++i;
        }
    }
    
    int pick() {
        int d = rand()%len;
        if(m.find(d) != m.end()) return m[d];
        return d;
    }
private:
    std::unordered_map<int,int>m;
    int len;
};

/**
 * Your Solution object will be instantiated and called as such:
 * Solution* obj = new Solution(N, blacklist);
 * int param_1 = obj->pick();
 */
