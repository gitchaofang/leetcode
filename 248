class Solution {
public:
    bool great(const std::string& str, const std::string& stand){
        if(str.size() == stand.size()) return str > stand;
        return str.size() > stand.size();
    }
    
    bool less(const std::string& str, const std::string& stand){
        if(str.size() == stand.size()) return str < stand;
        return str.size() < stand.size();
    }
    
    int strobogrammaticInRange(string low, string high) {
        std::map<char,char> m({{'0','0'},{'1','1'},{'6','9'},{'8','8'},{'9','6'}}); 
        std::queue<std::string>q({"1","8","","0"});
        int res = (low == "0") ? 1 :0;
        for(int i=0; i<2; ++i){
            std::string d = q.front();
            q.pop();
            if(great(d,high)) continue;
            if(!less(d,low)) ++res;
                q.push(d);
        }
     
        bool end = false;
        while(!q.empty() && !end){
            int len = q.size();
            for(int i=0; i<len; ++i){
                std::string s = q.front();
                q.pop();
                for(auto it = m.begin(); it != m.end(); ++it){
                    std::string ss = it -> first + s + it  -> second;
                    if(ss[0] == '0'){
                        q.push(ss);
                        continue;
                    }
                    if(great(ss,high)){
                        end = true;
                        break;
                    }
                    if(!less(ss,low)) ++res;
                    q.push(ss);
                }
            }
        }
        return res;
    }
};
