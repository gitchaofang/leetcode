class Solution {
public:
    int are(const std::vector<int>& v){
        int n = v.size();
        int res = 0;
        for(int i=0; i<n; ++i){
            if(i + 1 < n && v[i] <= v[i+1]) continue;
            int h = v[i];
            for(int j=i; j>=0; --j){
                h = std::min(v[j],h);
                res = std::max(res,(i-j+1)*h);
            }
        }
        return res;
    }
    int maximalRectangle(vector<vector<char>>& matrix) {
        int n = matrix.size();
        if(n == 0) return 0;
        std::vector<int> v(matrix[0].size(),0);
        int res = 0;
        for(int i=0; i<n; ++i){
            for(int j=0; j<matrix[i].size(); ++j){
                if(matrix[i][j] == '0') v[j] = 0;
                else if(matrix[i][j] == '1') ++v[j];
            }
            int a = are(v);
            res = std::max(a,res);
        }
        return res;
    }
};
