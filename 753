class Solution {
public:
    string crackSafe(int n, int k){ 
        std::string res(n,'0');
        std::unordered_set<std::string> visited({res});
        for(int i = 0 ; i < pow(k,n); ++i){
            std::string str = res.substr(res.size() - n + 1);
            str.push_back('0');
            for(int j = k - 1; j >= 0; --j){
                str.back() = '0' + j;
                if(visited.find(str) != visited.end()) continue;
                res.push_back(str.back());
                visited.insert(std::move(str));
                break;
            }
        }
        return res;
    }
};
