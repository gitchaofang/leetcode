class Solution {
public:
    bool check(const std::string& str1, const std::string& str2){
        int cnt = 0;
        for(int i = 0; i < str1.size(); ++i){
            if(str1[i] == str2[i]) continue;
            if(++cnt > 2) return false;
        }
        return true;
    }
    int getroot(const std::vector<int>& root, const int& d){
        return (root[d] == d) ? d : getroot(root,root[d]);
    }
    int numSimilarGroups(vector<string>& A) {
        int n = A.size();
        std::vector<int> root(n);
        for(int i = 0; i < n; ++i) root[i] = i;
        for(int i = 0; i < n; ++i){
            int r = getroot(root,i);
            for(int j = i + 1; j < n; ++j){
                if(!check(A[i],A[j])) continue;
                root[getroot(root, j)] = r;
            }
        }
        int res = 0;
        for(int i = 0; i < n; ++i){
            if(root[i] == i) ++res;
        }
        return res;
    }
};
