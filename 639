class Solution {
public:
    int numDecodings(string s) {
        int n = s.size();
        std::vector<int64_t> dp(n + 1,0);
        dp[0] = 1;
        if(s[0] == '0') return 0;
        if(s[0] == '*') dp[1] = 9;
        else dp[1] = 1;
        int64_t M = pow(10,9) + 7;
        for(int i = 2; i <= n; ++i){
            if(s[i - 1] == '0'){
                if(s[i - 2] == '1' || s[i - 2] == '2') dp[i] = dp[i - 2];
                else if(s[i - 2] == '*') dp[i] = dp[i - 2] * 2;
                else return 0;
            }
            else if(s[i - 1] >= '1' && s[i - 1] <= '9'){
                dp[i] = dp[i - 1];
                if(s[i - 2] == '1' || (s[i - 2] == '2' && s[i - 1] <= '6')) dp[i] += dp[i - 2];
                else if(s[i - 2] == '*'){
                    if(s[i - 1] <= '6') dp[i] += dp[i - 2] * 2;
                    else dp[i] += dp[i - 2];
                }
            }
            else{
                dp[i] = dp[i - 1] * 9;
                if(s[i - 2] == '1') dp[i] += dp[i - 2] * 9;
                else if(s[i - 2] == '2') dp[i] += dp[i - 2] * 6;
                else if(s[i - 2] == '*') dp[i] += dp[i - 2] * 15;
            }
            dp[i] %= M;
        }
        return dp[n];
    }
};
