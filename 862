class cmp{
    public:
        bool operator()(const std::pair<int,int>& p1, std::pair<int,int>& p2){
            if(p1.first == p2.first) return p1.second < p2.second;
            return p1.first > p2.first;
        }
};
class Solution {
public:
    int shortestSubarray(vector<int>& A, int K) {
        int n = A.size();
        std::priority_queue<std::pair<int,int>,std::vector<std::pair<int,int>>,cmp>pq;
        int sum = 0;
        int res = INT_MAX;
        for(int i=0; i<A.size(); ++i){
            sum += A[i];
            if(sum >= K) res = std::min(res,i+1);
            while(!pq.empty() && sum - pq.top().first >= K){
                res = std::min(res, i - pq.top().second);
                pq.pop();
            }
            pq.push({sum,i});
        }
        return (res == INT_MAX)?-1:res;
    }
};
