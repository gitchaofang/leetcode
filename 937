class cmp{
    public:
        bool operator()(const std::string& str1, std::string& str2){
            std::string head1 = str1.substr(0,str1.find(' '));
            std::string body1 = str1.substr(str1.find(' ') );
            std::string head2 = str2.substr(0,str2.find(' '));
            std::string body2 = str2.substr(str2.find(' '));
            if(body1 == body2) return head1 < head2;
            return body1 < body2;
        }
};
class Solution {
public:
    vector<string> reorderLogFiles(vector<string>& logs) {
        std::priority_queue<std::string,std::vector<std::string>,cmp>pq; 
        for(int i = 0; i < logs.size(); ++i){
            char c = logs[i][logs[i].find(' ') + 1];
            if(c >= '0' && c <= '9') continue;
            pq.push(logs[i]);
            logs.erase(logs.begin() + i);
            --i;
        }
        while(!pq.empty()){
            logs.insert(logs.begin(),pq.top());
            pq.pop();
        }
        return logs;
    }
};
