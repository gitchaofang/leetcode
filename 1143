class Solution {
public:
    int longestCommonSubsequence(string text1, string text2) {
        int len1 = text1.size();
        int len2 = text2.size();
        std::vector<std::vector<int>>dp(len1 + 1, std::vector<int>(len2 + 1,0));
        for(int i = 1; i <= len1; ++i){
            for(int j = 1; j <= len2; ++j){
                dp[i][j] = std::max(dp[i - 1][j], dp[i][j - 1]);
                if(text1[i - 1] == text2[j - 1]) dp[i][j] = std::max(dp[i - 1][j - 1] + 1, dp[i][j]);
            }
        }
        return dp[len1][len2];
    }
};
