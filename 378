struct cmp{
    bool operator ()(const std::vector<int>& v1, const std::vector<int>& v2){   
        return v1[0] > v2[0];
    }        
};
class Solution {
public:
    int kthSmallest(vector<vector<int>>& matrix, int k) {
        int row = matrix.size();
        int col = matrix[0].size();
        int res = 0;
        std::priority_queue<std::vector<int>, std::vector<std::vector<int>>, cmp>q;   
        q.push({matrix[0][0],0,0});
        matrix[0][0] = INT_MAX;
        for(int i = 0; i < k; ++i){
            std::vector<int> v = q.top();
            q.pop();
            res = v[0];
            if(v[1] + 1 < row && matrix[v[1] + 1][v[2]] != INT_MAX){ 
                q.push({matrix[v[1] + 1][v[2]],v[1] + 1, v[2]});
                matrix[v[1] + 1][v[2]] = INT_MAX;
            }
            if(v[2] + 1 < col && matrix[v[1]][v[2] + 1] != INT_MAX){
                q.push({matrix[v[1]][v[2] + 1], v[1], v[2] + 1});
                matrix[v[1]][v[2] + 1] = INT_MAX;
            }
        }
        return res;
    }
};
