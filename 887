class Solution {
public:
    int superEggDrop(int K, int N) {
        int res = INT_MAX;
        std::vector<std::vector<int>> dp(K+1,std::vector<int>(N+1,0));
        for(int i=0; i<=N; ++i) dp[1][i] = i;
        for(int i=2; i<=K; ++i){
            for(int j=1; j<=N; ++j){
                dp[i][j] = j;
                int left = 1;
                int right = j;
                while(left < right){
                    int mid = (right - left)/2 + left;
                    if(dp[i-1][mid - 1] < dp[i][j - mid]) left = mid + 1;
                    else right = mid;
                }
                dp[i][j] = std::min(dp[i][j],std::max(dp[i-1][right - 1],dp[i][j-right]) + 1);
            }
        }
        return dp[K][N];
    }
};
