class Solution {
public:
    bool sequenceReconstruction(vector<int>& org, vector<vector<int>>& seqs) {
        int n = org.size();
        if(n != 0 && seqs.empty()) return false;
        std::vector<int> pos(n + 1);
        for(int i = 0 ; i < n; ++i) pos[org[i]] = i;
        std::vector<int> visited(n + 1, 0);
        int cnt = n - 1;
        for(const std::vector<int>& v: seqs){
            for(int i = 0; i < v.size(); ++i){
                if(v[i] < 1 || v[i] > n) return false;
                if(i == 0) continue;
                if(pos[v[i]] <= pos[v[i - 1]]) return false;
                if(visited[v[i]] == 0 && pos[v[i]]  == pos[v[i - 1]] + 1){ 
                    --cnt;
                    visited[v[i]] = 1;
                }
            }   
        }
        return cnt == 0;
    }
};
