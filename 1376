class Solution {
public:
    int dfs(const int& cur, const std::vector<std::vector<int>>& sub, const std::vector<int>& time){
        if(sub[cur].size() == 0) return time[cur];
        int res = 0;
        for(const int& d: sub[cur]) res = std::max(res, dfs(d, sub, time));
        return res + time[cur];
    }
    int numOfMinutes(int n, int headID, vector<int>& manager, vector<int>& informTime) {
        std::vector<std::vector<int>> sub(n);
        int boss = 0;
        for(int i = 0; i < n; ++i){ 
            if(manager[i] == -1){
                boss = i;
                continue;
            }
            sub[manager[i]].push_back(i);
        }
        return dfs(boss, sub, informTime);
    }
};
